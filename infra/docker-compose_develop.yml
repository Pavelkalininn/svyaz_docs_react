version: '3.3'
services:

  db:
    image: postgres:13.0-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    depends_on:
      - db
    env_file:
      - ./.env

  # frontend:
  #   build:
  #     context: ../frontend
  #     dockerfile: Dockerfile
  #   restart: always
  #   volumes:
  #     - ../frontend/:/app/result_build/
  #     - static_value:/app/result_build/build/static/
  #   depends_on:
  #     - backend
  #   env_file:
  #     - ./.env

  redis:
    image: redis:alpine

  celery:
    build: ../backend
    command: celery -A backend worker -l info
    volumes:
      - ../backend/:/usr/src/app/
    environment:
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
    depends_on:
      - redis
    env_file:
      - ./.env

  celery-beat:
    build: ../backend
    command: celery -A backend beat -l info
    volumes:
      - ../backend/:/usr/src/app/
    environment:
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
    depends_on:
      - redis
    env_file:
      - ./.env

  nginx:
    image: nginx:1.19.3
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx_develop.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html
      - static_value:/static/
      - media_value:/media/
    depends_on:
      - frontend
      - back_host

volumes:
  static_value:
  media_value:
  postgres_data:
